add_integer(a, b=98)```
This function returns the sum of two arguments, where the second argument is optional and its default value is 98. The function works with both integers and floating-point values. However, floats are cast to integers before addition is performed. If any argument is not an integer or float, a TypeError is raised. If both arguments are non-integers and non-floats, a TypeError message is only printed for the first argument. The function also fails if the arguments are infinity or NaN values, raising OverflowError and ValueError, respectively. 

Usage Examples:

# Example 1
add_integer(2, 3)
Output: 5

# Example 2
add_integer(2, -3)
Output: -1

# Example 3
add_integer(2.0, 3.0)
Output: 5

# Example 4
add_integer(2.9, 0.2)
Output: 2

# Example 5
add_integer(-2.9, -0.2)
Output: -2

# Example 6
add_integer(2.3, -3)
Output: -1

# Example 7
add_integer(2)
Output: 100

# Example 8
add_integer("hello", 3)
Output: TypeError: a must be an integer

# Example 9
add_integer(2, "hello")
Output: TypeError: b must be an integer

# Example 10
add_integer(None)
Output: TypeError: a must be an integer

# Example 11
add_integer(2.3, None)
Output: TypeError: b must be an integer

# Example 12
add_integer("hello", "there")
Output: TypeError: a must be an integer

# Example 13
add_integer(float('inf'))
Output: OverflowError: cannot convert float infinity to integer

# Example 14
add_integer(2, float('inf'))
Output: OverflowError: cannot convert float infinity to integer

# Example 15
add_integer(float('nan'))
Output: ValueError: cannot convert float NaN to integer

# Example 16
add_integer(2, float('nan'))
Output: ValueError: cannot convert float NaN to integer

